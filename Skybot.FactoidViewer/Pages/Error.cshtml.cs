// Skybot.FactoidViewer
// Skybot.FactoidViewer / Error.cshtml.cs BY Kristian Schlikow
// First modified on 2023.02.17
// Last modified on 2023.03.23

namespace Skybot.FactoidViewer.Pages

{
#region
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.RazorPages;

    using System.Diagnostics;
#endregion

    /// <summary>
    ///     Class ErrorModel.
    ///     Implements the <see cref="PageModel" />
    /// </summary>
    /// <seealso cref="PageModel" />
    /// <autogeneratedoc />
    [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
    [IgnoreAntiforgeryToken]
    public class ErrorModel : PageModel
    {
        /// <summary>
        ///     The logger
        /// </summary>
        /// <autogeneratedoc />
        private readonly ILogger<ErrorModel> _logger;

        /// <summary>
        ///     Initializes a new instance of the <see cref="ErrorModel" /> class.
        /// </summary>
        /// <param name="logger">The logger.</param>
        /// <autogeneratedoc />
        public ErrorModel(ILogger<ErrorModel> logger) => _logger = logger;

        /// <summary>
        ///     Gets or sets the request identifier.
        /// </summary>
        /// <value>The request identifier.</value>
        /// <autogeneratedoc />
        public string? RequestId { get; set; }

        /// <summary>
        ///     Gets a value indicating whether [show request identifier].
        /// </summary>
        /// <value><c>true</c> if [show request identifier]; otherwise, <c>false</c>.</value>
        /// <autogeneratedoc />
        public bool ShowRequestId => !string.IsNullOrEmpty(RequestId);

        /// <summary>
        ///     Called when [get].
        /// </summary>
        /// <autogeneratedoc />
        public void OnGet() => RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier;
    }
}
